# Generated by Django 3.1 on 2021-04-24 14:51

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    replaces = [('registration', '0001_initial'), ('registration', '0002_auto_20170909_1652'), ('registration', '0003_userproperty_userpropertyvalue'), ('registration', '0004_userpropertyvalue_int_value'), ('registration', '0005_auto_20171111_1433'), ('registration', '0006_auto_20171111_1451'), ('registration', '0007_auto_20171111_1455'), ('registration', '0008_auto_20171125_1054'), ('registration', '0009_auto_20171125_1352'), ('registration', '0010_auto_20180101_1320'), ('registration', '0011_auto_20180101_1333'), ('registration', '0012_auto_20180101_1455'), ('registration', '0013_auto_20180107_2315'), ('registration', '0014_auto_20180109_1250'), ('registration', '0015_auto_20180110_0929'), ('registration', '0016_propertychoice'), ('registration', '0017_propertyvalue_choices_value'), ('registration', '0018_auto_20180111_2019'), ('registration', '0019_auto_20180111_2046'), ('registration', '0020_auto_20180115_1539'), ('registration', '0021_auto_20180116_2150'), ('registration', '0022_auto_20180116_2209'), ('registration', '0023_attendeeproperty_hidden'), ('registration', '0024_attendeeproperty_data_utilisation'), ('registration', '0025_auto_20180125_1008'), ('registration', '0026_auto_20180129_2104'), ('registration', '0027_attendeeproperty_required_if'), ('registration', '0028_auto_20180212_0849'), ('registration', '0029_auto_20180213_1620'), ('registration', '0030_auto_20180214_0930'), ('registration', '0031_attendeeproperty_apply_required'), ('registration', '0032_auto_20180327_0801'), ('registration', '0033_auto_20180328_1812'), ('registration', '0034_auto_20180328_1812'), ('registration', '0035_auto_20180328_1824'), ('registration', '0036_auto_20180328_1824'), ('registration', '0037_auto_20180328_1827'), ('registration', '0038_auto_20180328_1827'), ('registration', '0039_auto_20190218_2202'), ('registration', '0040_applicationquestion_applicationquestionvalue'), ('registration', '0041_auto_20190220_1911'), ('registration', '0042_auto_20190221_1403'), ('registration', '0043_auto_20190222_2046')]

    initial = True

    dependencies = [
        ('tournament', '0035_auto_20180115_0853'),
        ('tournament', '0031_auto_20170909_2203'),
        ('account', '0014_participationrole_fee'),
        ('account', '0007_auto_20170313_2350'),
        ('account', '0008_auto_20170909_2138'),
        ('tournament', '0029_auto_20170907_2101'),
        ('team', '0008_auto_20170115_2141'),
        ('account', '0020_participationrole_attending'),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('int', 'Integer'), ('string', 'String'), ('datetime', 'datetime'), ('date', 'date'), ('image', 'image'), ('pdf', 'pdf'), ('text', 'text'), ('gender', 'gender'), ('boolean', 'boolean'), ('boolean_true', 'required true boolean'), ('preferred_name', 'preferred name'), ('preferred_name_short', 'preferred name short'), ('choice', 'Select One'), ('multiple_choice', 'Select Multiple'), ('conflict_origins', 'Conflict with Origins'), ('country', 'Country (ISO)'), ('problem', 'Problem')], max_length=30)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProperty',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='registration.property')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='PropertyChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.property')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.activeuser')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.origin')),
                ('participation_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.participationrole')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.team')),
                ('team_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='team.teamrole')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
                ('handled_as', models.CharField(blank=True, choices=[('accepted', 'accepted'), ('declined', 'declined'), ('withdraw', 'withdrawn')], max_length=20, null=True)),
                ('handled_at', models.DateTimeField(blank=True, null=True)),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.attendee')),
            ],
            options={
                'permissions': (('manage_team', 'Manage the Team where user is TL'), ('manage_data', 'Set users participation data'), ('accept_team', 'Accept new Teams'), ('accept_role', 'Accept new Persons for Role'), ('accept_juror', 'Accept new Jurors'), ('manage_all_teams', 'Manage all Teams'), ('view_all_data', 'View all Attendee Data')),
            },
        ),
        migrations.CreateModel(
            name='PropertyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('int_value', models.IntegerField(blank=True, null=True)),
                ('string_value', models.CharField(blank=True, max_length=255, null=True)),
                ('datetime_value', models.DateTimeField(blank=True, null=True)),
                ('date_value', models.DateField(blank=True, null=True)),
                ('image_value', models.ImageField(blank=True, null=True, upload_to='')),
                ('text_value', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='account.activeuser')),
                ('creation', models.DateTimeField(auto_now=True)),
                ('choices_value', models.ManyToManyField(blank=True, to='registration.PropertyChoice')),
                ('bool_value', models.NullBooleanField()),
                ('conflict_origins', models.ManyToManyField(blank=True, to='tournament.Origin')),
                ('country_value', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('file_value', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='AttendeeProperty',
            fields=[
                ('edit_deadline', models.DateTimeField(blank=True, null=True)),
                ('optional', models.ManyToManyField(blank=True, related_name='optional_properties', to='account.ParticipationRole')),
                ('required', models.ManyToManyField(blank=True, related_name='required_properties', to='account.ParticipationRole')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
                ('user_property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.userproperty')),
                ('property_ptr', models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='registration.property')),
                ('hidden', models.BooleanField(default=False)),
                ('data_utilisation', models.TextField(blank=True, null=True, verbose_name='Explanation why this data is acquired')),
                ('required_if', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.attendeeproperty')),
                ('manager_confirmed', models.BooleanField(default=False)),
                ('apply_required', models.ManyToManyField(blank=True, related_name='apply_properties', to='account.ParticipationRole')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='UserPropertyValue',
            fields=[
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.userproperty')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='account.activeuser')),
                ('propertyvalue_ptr', models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='registration.propertyvalue')),
            ],
            options={
                'unique_together': set(),
            },
        ),
        migrations.CreateModel(
            name='AttendeePropertyValue',
            fields=[
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.attendee')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registration.attendeeproperty')),
                ('propertyvalue_ptr', models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='registration.propertyvalue')),
                ('confirmed', models.BooleanField(default=True)),
            ],
            options={
                'unique_together': set(),
            },
        ),
        migrations.CreateModel(
            name='ApplicationQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('name', models.CharField(max_length=500)),
                ('type', models.CharField(choices=[('int', 'Integer'), ('string', 'String'), ('datetime', 'datetime'), ('date', 'date'), ('image', 'image'), ('pdf', 'pdf'), ('text', 'text'), ('boolean', 'boolean'), ('boolean_true', 'required true boolean')], max_length=30)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.participationrole')),
                ('help_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationQuestionValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('int_value', models.IntegerField(blank=True, null=True)),
                ('string_value', models.CharField(blank=True, max_length=255, null=True)),
                ('datetime_value', models.DateTimeField(blank=True, null=True)),
                ('date_value', models.DateField(blank=True, null=True)),
                ('image_value', models.ImageField(blank=True, null=True, upload_to='')),
                ('file_value', models.FileField(blank=True, null=True, upload_to='')),
                ('text_value', models.TextField(blank=True, null=True)),
                ('bool_value', models.NullBooleanField()),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.application')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.applicationquestion')),
            ],
        ),
    ]
